AWSTemplateFormatVersion: '2010-09-09'
Description: "CI/CD Pipeline for Serverless Backend Deployment"

Parameters:
  PipelineBucket:
    Type: String
    Description: "S3 bucket to store CodePipeline artifacts"
  GitHubOwner:
    Type: String
    Description: "Your GitHub username"
  GitHubRepo:
    Type: String
    Description: "Repository name for backend"
  GitHubBranch:
    Type: String
    Default: "main"
    Description: "Git branch for backend"
  GitHubOAuthTokenSecretId:
    Type: String
    Description: "Secrets Manager secret ID that stores your GitHub OAuth token"

Resources:
  CodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: [ codepipeline.amazonaws.com ]
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSCodePipelineFullAccess

  BackendCodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: "BackendBuildProject"
      Source:
        Type: CODEPIPELINE
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:5.0
        Type: LINUX_CONTAINER
      ServiceRole: !GetAtt CodeBuildServiceRole.Arn

  CodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: [ codebuild.amazonaws.com ]
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSCodeBuildDeveloperAccess

  BackendPipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: "BackendDeploymentPipeline"
      RoleArn: !GetAtt CodePipelineRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref PipelineBucket
      Stages:
        - Name: Source
          Actions:
            - Name: SourceAction
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Provider: GitHub
                Version: 1
              OutputArtifacts:
                - Name: SourceOutput
              Configuration:
                Owner: !Ref GitHubOwner
                Repo: !Ref GitHubRepo
                Branch: !Ref GitHubBranch
                OAuthToken: "{{resolve:secretsmanager:!Ref GitHubOAuthTokenSecretId:SecretString}}"
        - Name: Build
          Actions:
            - Name: BuildAction
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              InputArtifacts:
                - Name: SourceOutput
              OutputArtifacts:
                - Name: BuildOutput
              Configuration:
                ProjectName: !Ref BackendCodeBuildProject
        - Name: Deploy
          Actions:
            - Name: DeployAction
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              InputArtifacts:
                - Name: BuildOutput
              Configuration:
                ActionMode: CREATE_UPDATE
                StackName: "my-backend-stack"
                Capabilities: CAPABILITY_IAM
                TemplatePath: "BuildOutput::packaged.yaml"
